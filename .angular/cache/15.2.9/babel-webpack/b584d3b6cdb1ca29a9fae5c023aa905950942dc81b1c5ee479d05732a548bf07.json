{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction FacturaVentaComponent_tr_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\")(20, \"div\", 5)(21, \"button\", 6);\n    i0.ɵɵelement(22, \"i\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"button\", 8);\n    i0.ɵɵelement(24, \"i\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"button\", 10);\n    i0.ɵɵelement(26, \"i\", 11);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.numero);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.cliente);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.creacion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.vencimiento);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.total);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.cobrado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.porCobrar);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.estadoDian);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.estado);\n  }\n}\nexport class FacturaVentaComponent {\n  constructor(router) {\n    this.router = router;\n    this.rows = [];\n    // Add two initial rows to the table (example data)\n    this.addRowWithData('001', 'John Doe', '2023-07-26', '2023-08-26', 100, 50, 50, 'Aprobado', 'Activo');\n    this.addRowWithData('002', 'Jane Smith', '2023-07-25', '2023-08-25', 200, 100, 100, 'Pendiente', 'Inactivo');\n  }\n  navigateToNewPage() {\n    // Replace 'new-page' with the route path of the new page you want to navigate to\n    this.router.navigate(['factura-venta-nuevo']);\n  }\n  addRowWithData(numero, cliente, creacion, vencimiento, total, cobrado, porCobrar, estadoDian, estado) {\n    const newRow = {\n      numero: numero,\n      cliente: cliente,\n      creacion: creacion,\n      vencimiento: vencimiento,\n      total: total,\n      cobrado: cobrado,\n      porCobrar: porCobrar,\n      estadoDian: estadoDian,\n      estado: estado\n    };\n    this.rows.push(newRow);\n  }\n}\nFacturaVentaComponent.ɵfac = function FacturaVentaComponent_Factory(t) {\n  return new (t || FacturaVentaComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nFacturaVentaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FacturaVentaComponent,\n  selectors: [[\"app-factura-venta\"]],\n  decls: 33,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"table\", \"table-bordered\"], [\"colspan\", \"9\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn-group\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"], [1, \"fa-solid\", \"fa-pen-to-square\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\"], [1, \"fa-solid\", \"fa-download\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\"], [1, \"fa-solid\", \"fa-trash\"]],\n  template: function FacturaVentaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Facturas de Venta\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 1)(4, \"thead\")(5, \"tr\");\n      i0.ɵɵelement(6, \"th\", 2);\n      i0.ɵɵelementStart(7, \"th\")(8, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function FacturaVentaComponent_Template_button_click_8_listener() {\n        return ctx.navigateToNewPage();\n      });\n      i0.ɵɵtext(9, \" Crear Nuevo \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"tr\")(11, \"th\");\n      i0.ɵɵtext(12, \"Numero\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Cliente\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Creacion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Vencimiento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Total\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Cobrado\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Por Cobrar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\");\n      i0.ɵɵtext(26, \"Estado DIAN\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\");\n      i0.ɵɵtext(28, \"Estado\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\");\n      i0.ɵɵtext(30, \"Acciones\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"tbody\");\n      i0.ɵɵtemplate(32, FacturaVentaComponent_tr_32_Template, 27, 9, \"tr\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(32);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rows);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\".btn-group[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: flex-end;\\n}\\n\\n.container[_ngcontent-%COMP%]{\\n    padding: 2rem;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%]{\\n    font-size: 12px;\\n}\\n\\n.btn-danger[_ngcontent-%COMP%]{\\n    font-size: 12px;\\n}\\n\\n.btn-success[_ngcontent-%COMP%]{\\n    font-size: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmFjdHVyYS12ZW50YS9mYWN0dXJhLXZlbnRhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5idG4tZ3JvdXAge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLmNvbnRhaW5lcntcbiAgICBwYWRkaW5nOiAycmVtO1xufVxuXG4uYnRuLXByaW1hcnl7XG4gICAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4uYnRuLWRhbmdlcntcbiAgICBmb250LXNpemU6IDEycHg7XG59XG5cbi5idG4tc3VjY2Vzc3tcbiAgICBmb250LXNpemU6IDEycHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","FacturaVentaComponent","constructor","router","addRowWithData","navigateToNewPage","navigate","numero","cliente","creacion","vencimiento","total","cobrado","porCobrar","estadoDian","estado","newRow","rows","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/alex/Projects/invoice_dummy/src/app/factura-venta/factura-venta.component.html","/Users/alex/Projects/invoice_dummy/src/app/factura-venta/factura-venta.component.ts"],"sourcesContent":["<div class=\"container\">\n  <h2>Facturas de Venta</h2>\n  <table class=\"table table-bordered\">\n    <thead>\n      <!-- Add \"Create New\" button row -->\n      <tr>\n        <th colspan=\"9\"></th>\n        <th>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            (click)=\"navigateToNewPage()\"\n          >\n            Crear Nuevo\n          </button>\n        </th>\n      </tr>\n      <!-- Table header row -->\n      <tr>\n        <th>Numero</th>\n        <th>Cliente</th>\n        <th>Creacion</th>\n        <th>Vencimiento</th>\n        <th>Total</th>\n        <th>Cobrado</th>\n        <th>Por Cobrar</th>\n        <th>Estado DIAN</th>\n        <th>Estado</th>\n        <th>Acciones</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let row of rows\">\n        <td>{{ row.numero }}</td>\n        <td>{{ row.cliente }}</td>\n        <td>{{ row.creacion }}</td>\n        <td>{{ row.vencimiento }}</td>\n        <td>{{ row.total }}</td>\n        <td>{{ row.cobrado }}</td>\n        <td>{{ row.porCobrar }}</td>\n        <td>{{ row.estadoDian }}</td>\n        <td>{{ row.estado }}</td>\n        <td>\n          <!-- Add Bootstrap buttons here with btn-group class -->\n          <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-primary\">\n              <i class=\"fa-solid fa-pen-to-square\"></i>\n            </button>\n            <button type=\"button\" class=\"btn btn-success\">\n              <i class=\"fa-solid fa-download\"></i>\n            </button>\n            <button type=\"button\" class=\"btn btn-danger\">\n              <i class=\"fa-solid fa-trash\"></i>\n            </button>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\ninterface FacturaVenta {\n  numero: string;\n  cliente: string;\n  creacion: string;\n  vencimiento: string;\n  total: number;\n  cobrado: number;\n  porCobrar: number;\n  estadoDian: string;\n  estado: string;\n}\n\n@Component({\n  selector: 'app-factura-venta',\n  templateUrl: './factura-venta.component.html',\n  styleUrls: ['./factura-venta.component.css']\n})\nexport class FacturaVentaComponent {\n  rows: FacturaVenta[] = [];\n\n  constructor(private router: Router) {\n    // Add two initial rows to the table (example data)\n    this.addRowWithData('001', 'John Doe', '2023-07-26', '2023-08-26', 100, 50, 50, 'Aprobado', 'Activo');\n    this.addRowWithData('002', 'Jane Smith', '2023-07-25', '2023-08-25', 200, 100, 100, 'Pendiente', 'Inactivo');\n  }\n\n  navigateToNewPage(): void {\n    // Replace 'new-page' with the route path of the new page you want to navigate to\n    this.router.navigate(['factura-venta-nuevo']);\n  }\n\n  addRowWithData(\n    numero: string,\n    cliente: string,\n    creacion: string,\n    vencimiento: string,\n    total: number,\n    cobrado: number,\n    porCobrar: number,\n    estadoDian: string,\n    estado: string\n  ): void {\n    const newRow: FacturaVenta = {\n      numero: numero,\n      cliente: cliente,\n      creacion: creacion,\n      vencimiento: vencimiento,\n      total: total,\n      cobrado: cobrado,\n      porCobrar: porCobrar,\n      estadoDian: estadoDian,\n      estado: estado\n    };\n    this.rows.push(newRow);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}