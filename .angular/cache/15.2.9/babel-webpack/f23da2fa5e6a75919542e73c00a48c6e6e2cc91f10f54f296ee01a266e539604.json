{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet FacturaVentaNuevoComponent = class FacturaVentaNuevoComponent {\n  constructor() {\n    this.rows = [];\n    this.items = [];\n    // Define the options for dropdowns (you can populate this from your data source)\n    this.dropdownOptions = ['Option 1', 'Option 2', 'Option 3'];\n    this.total = 0;\n    // Add a new row with default values when the component is created\n    this.addRow();\n    this.items.push({\n      itemName: 'Activacion NIT',\n      reference: 'Reference 1',\n      price: 100,\n      tax: 10,\n      discount: 0,\n      charge: 0,\n      description: \"desc1\"\n    });\n    this.items.push({\n      itemName: 'Volumen Documento Electronico',\n      reference: 'Reference 2',\n      price: 200,\n      tax: 10,\n      discount: 0,\n      charge: 0,\n      description: \"desc2\"\n    });\n    this.items.push({\n      itemName: 'TEPRE',\n      reference: 'Reference 3',\n      price: 300,\n      tax: 10,\n      discount: 0,\n      charge: 0,\n      description: \"desc3\"\n    });\n  }\n  addRow() {\n    // Add a new row with default values\n    this.rows.push({\n      column1: this.dropdownOptions[0],\n      column2: '',\n      column3: '',\n      column4: this.dropdownOptions[0],\n      column5: '',\n      column6: '',\n      column7: 0 // Initialize column7 to 0 (as a number)\n    });\n    // Recalculate the total\n    this.calculateTotal();\n  }\n  deleteRow(index) {\n    // Delete the row at the specified index\n    this.rows.splice(index, 1);\n    // Recalculate the total\n    this.calculateTotal();\n  }\n  // Calculate the total value from column7 of all rows\n  calculateTotal() {\n    this.total = this.rows.reduce((sum, row) => {\n      const column7Value = parseFloat(row.column7) || 0;\n      const column6Value = parseFloat(row.column6) || 0;\n      return sum + column7Value * column6Value;\n    }, 0);\n  }\n  onColumnChange() {\n    // Called whenever the values of column6 or column7 change\n    this.calculateTotal();\n  }\n  getItemReference(itemName) {\n    // Find the item with the given itemName and return its reference\n    const item = this.items.find(item => item.itemName === itemName);\n    return item ? item.reference : '';\n  }\n  getItemPrice(itemName) {\n    // Find the item with the given itemName and return its price as a string\n    const item = this.items.find(item => item.itemName === itemName);\n    return item ? item.price.toString() : '';\n  }\n  getItemDescription(itemName) {\n    // Find the item with the given itemName and return its description\n    const item = this.items.find(item => item.itemName === itemName);\n    return item ? item.description : '';\n  }\n  getItemTax(itemName) {\n    // Find the item with the given itemName and return its description\n    const item = this.items.find(item => item.itemName === itemName);\n    return item ? item.tax.toString() : '';\n  }\n};\nFacturaVentaNuevoComponent = __decorate([Component({\n  selector: 'app-factura-venta-nuevo',\n  templateUrl: './factura-venta-nuevo.component.html',\n  styleUrls: ['./factura-venta-nuevo.component.css']\n})], FacturaVentaNuevoComponent);\nexport { FacturaVentaNuevoComponent };","map":{"version":3,"mappings":"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","names":["Component","FacturaVentaNuevoComponent","constructor","addRow","items","push","itemName","reference","price","tax","discount","charge","description","rows","column1","dropdownOptions","column2","column3","column4","column5","column6","column7","calculateTotal","deleteRow","index","splice","total","reduce","sum","row","column7Value","parseFloat","column6Value","onColumnChange","getItemReference","item","find","getItemPrice","toString","getItemDescription","getItemTax","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/alex/Projects/invoice_dummy/src/app/factura-venta/factura-venta-nuevo/factura-venta-nuevo.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Item } from 'src/app/models/item.interface';\n\n@Component({\n  selector: 'app-factura-venta-nuevo',\n  templateUrl: './factura-venta-nuevo.component.html',\n  styleUrls: ['./factura-venta-nuevo.component.css']\n})\nexport class FacturaVentaNuevoComponent {\n  rows: any[] = [];\n  items: Item[] = []\n\n  // Define the options for dropdowns (you can populate this from your data source)\n  dropdownOptions: string[] = ['Option 1', 'Option 2', 'Option 3'];\n  total: number = 0;\n\n  constructor() {\n    // Add a new row with default values when the component is created\n    this.addRow();\n    this.items.push({\n      itemName: 'Activacion NIT',\n      reference: 'Reference 1',\n      price: 100,\n      tax: 10,\n      discount: 0,\n      charge: 0,\n      description: \"desc1\"\n    });\n\n    this.items.push({\n      itemName: 'Volumen Documento Electronico',\n      reference: 'Reference 2',\n      price: 200,\n      tax: 10,\n      discount: 0,\n      charge: 0,\n      description: \"desc2\"\n    });\n\n    this.items.push({\n      itemName: 'TEPRE',\n      reference: 'Reference 3',\n      price: 300,\n      tax: 10,\n      discount: 0,\n      charge: 0,\n      description: \"desc3\"\n    });\n\n  }\n\n  addRow(): void {\n    // Add a new row with default values\n    this.rows.push({\n      column1: this.dropdownOptions[0],\n      column2: '',\n      column3: '',\n      column4: this.dropdownOptions[0],\n      column5: '',\n      column6: '',\n      column7: 0, // Initialize column7 to 0 (as a number)\n    });\n\n    // Recalculate the total\n    this.calculateTotal();\n  }\n\n  deleteRow(index: number): void {\n    // Delete the row at the specified index\n    this.rows.splice(index, 1);\n\n    // Recalculate the total\n    this.calculateTotal();\n  }\n\n  // Calculate the total value from column7 of all rows\n  calculateTotal(): void {\n    this.total = this.rows.reduce((sum, row) => {\n      const column7Value = parseFloat(row.column7) || 0;\n      const column6Value = parseFloat(row.column6) || 0;\n      return sum + column7Value * column6Value;\n    }, 0);\n  }\n\n  onColumnChange(): void {\n    // Called whenever the values of column6 or column7 change\n    this.calculateTotal();\n  }\n\n  getItemReference(itemName: string): string {\n    // Find the item with the given itemName and return its reference\n    const item = this.items.find((item) => item.itemName === itemName);\n    return item ? item.reference : '';\n  }\n  getItemPrice(itemName: string): string {\n    // Find the item with the given itemName and return its price as a string\n    const item = this.items.find((item) => item.itemName === itemName);\n    return item ? item.price.toString() : '';\n  }\n\n  getItemDescription(itemName: string): string {\n    // Find the item with the given itemName and return its description\n    const item = this.items.find((item) => item.itemName === itemName);\n    return item ? item.description : '';\n  }\n  getItemTax(itemName: string): string {\n    // Find the item with the given itemName and return its description\n    const item = this.items.find((item) => item.itemName === itemName);\n    return item ? item.tax.toString() : '';\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}